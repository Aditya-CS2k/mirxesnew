# Generated by Django 3.1.3 on 2020-12-02 04:35

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('Profile', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Appraisal_Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Behaviours_Blueprint',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('f1', models.IntegerField(choices=[(1, '1 - Major Improvement Needed'), (2, '2 - Needs Improvement'), (3, '3 - Meets Expectations'), (4, '4 - Exceeds Expectations'), (5, '5 - Far Exceed Expectations')], default=1)),
                ('f2', models.IntegerField(choices=[(1, '1 - Major Improvement Needed'), (2, '2 - Needs Improvement'), (3, '3 - Meets Expectations'), (4, '4 - Exceeds Expectations'), (5, '5 - Far Exceed Expectations')], default=1)),
                ('f3', models.IntegerField(choices=[(1, '1 - Major Improvement Needed'), (2, '2 - Needs Improvement'), (3, '3 - Meets Expectations'), (4, '4 - Exceeds Expectations'), (5, '5 - Far Exceed Expectations')], default=1)),
                ('f4', models.IntegerField(choices=[(1, '1 - Major Improvement Needed'), (2, '2 - Needs Improvement'), (3, '3 - Meets Expectations'), (4, '4 - Exceeds Expectations'), (5, '5 - Far Exceed Expectations')], default=1)),
                ('f5', models.IntegerField(choices=[(1, '1 - Major Improvement Needed'), (2, '2 - Needs Improvement'), (3, '3 - Meets Expectations'), (4, '4 - Exceeds Expectations'), (5, '5 - Far Exceed Expectations')], default=1)),
                ('f6', models.IntegerField(choices=[(1, '1 - Major Improvement Needed'), (2, '2 - Needs Improvement'), (3, '3 - Meets Expectations'), (4, '4 - Exceeds Expectations'), (5, '5 - Far Exceed Expectations')], default=1)),
                ('f7', models.IntegerField(choices=[(1, '1 - Major Improvement Needed'), (2, '2 - Needs Improvement'), (3, '3 - Meets Expectations'), (4, '4 - Exceeds Expectations'), (5, '5 - Far Exceed Expectations')], default=1)),
                ('f8', models.IntegerField(choices=[(1, '1 - Major Improvement Needed'), (2, '2 - Needs Improvement'), (3, '3 - Meets Expectations'), (4, '4 - Exceeds Expectations'), (5, '5 - Far Exceed Expectations')], default=1)),
                ('f9', models.IntegerField(choices=[(1, '1 - Major Improvement Needed'), (2, '2 - Needs Improvement'), (3, '3 - Meets Expectations'), (4, '4 - Exceeds Expectations'), (5, '5 - Far Exceed Expectations')], default=1)),
                ('f10', models.IntegerField(choices=[(1, '1 - Major Improvement Needed'), (2, '2 - Needs Improvement'), (3, '3 - Meets Expectations'), (4, '4 - Exceeds Expectations'), (5, '5 - Far Exceed Expectations')], default=1)),
                ('f11', models.IntegerField(choices=[(1, '1 - Major Improvement Needed'), (2, '2 - Needs Improvement'), (3, '3 - Meets Expectations'), (4, '4 - Exceeds Expectations'), (5, '5 - Far Exceed Expectations')], default=1)),
                ('f12', models.IntegerField(choices=[(1, '1 - Major Improvement Needed'), (2, '2 - Needs Improvement'), (3, '3 - Meets Expectations'), (4, '4 - Exceeds Expectations'), (5, '5 - Far Exceed Expectations')], default=1)),
                ('f13', models.IntegerField(choices=[(1, '1 - Major Improvement Needed'), (2, '2 - Needs Improvement'), (3, '3 - Meets Expectations'), (4, '4 - Exceeds Expectations'), (5, '5 - Far Exceed Expectations')], default=1)),
                ('f14', models.IntegerField(choices=[(1, '1 - Major Improvement Needed'), (2, '2 - Needs Improvement'), (3, '3 - Meets Expectations'), (4, '4 - Exceeds Expectations'), (5, '5 - Far Exceed Expectations')], default=1)),
                ('f15', models.IntegerField(choices=[(1, '1 - Major Improvement Needed'), (2, '2 - Needs Improvement'), (3, '3 - Meets Expectations'), (4, '4 - Exceeds Expectations'), (5, '5 - Far Exceed Expectations')], default=1)),
                ('f16', models.IntegerField(choices=[(1, '1 - Major Improvement Needed'), (2, '2 - Needs Improvement'), (3, '3 - Meets Expectations'), (4, '4 - Exceeds Expectations'), (5, '5 - Far Exceed Expectations')], default=1)),
            ],
        ),
        migrations.CreateModel(
            name='Overall_Appraisal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, null=True)),
                ('goal_weightage', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('competency_weightage', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('skill_weightage', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('start_date', models.DateField(default=datetime.date.today)),
                ('goals_setting_end_date', models.DateField(default=datetime.date.today)),
                ('mid_year_start_date', models.DateField(default=datetime.date.today)),
                ('mid_year_end_date', models.DateField(default=datetime.date.today)),
                ('end_year_start_date', models.DateField(default=datetime.date.today)),
                ('appraisal_end_date', models.DateField(default=datetime.date.today)),
                ('reports_end_date', models.DateField(default=datetime.date.today)),
                ('calibration_end_date', models.DateField(default=datetime.date.today)),
                ('rating_scale', models.CharField(choices=[('Denselight System', 'Denselight System'), ('MiRXes', 'MiRXes')], default='Denselight System', max_length=50, null=True)),
                ('status', models.CharField(choices=[('Stage 1', 'Goals Setting'), ('Stage 1B', 'Mid-Year Review'), ('Stage 2', 'Year-End Review'), ('Stage 3', 'Reports'), ('Stage 4', 'Calibration'), ('Completed', 'Completed')], max_length=100, null=True)),
                ('appraisal_category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Appraisals.appraisal_category')),
            ],
        ),
        migrations.CreateModel(
            name='peerAppraisal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title1', models.CharField(max_length=500)),
                ('strength1', models.CharField(blank=True, max_length=3000, null=True)),
                ('weaknessdevelopment1', models.CharField(blank=True, max_length=3000, null=True)),
                ('title2', models.CharField(default='NIL', max_length=500)),
                ('strength2', models.CharField(blank=True, max_length=3000, null=True)),
                ('weaknessdevelopment2', models.CharField(blank=True, max_length=3000, null=True)),
                ('title3', models.CharField(default='NIL', max_length=500)),
                ('strength3', models.CharField(blank=True, max_length=3000, null=True)),
                ('weaknessdevelopment3', models.CharField(blank=True, max_length=3000, null=True)),
                ('completion', models.CharField(choices=[('Uncompleted', 'Uncompleted'), ('Completed', 'Completed')], default='Uncompleted', max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Rating_Scale',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=5000)),
                ('limiter', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='User_Appraisal_List',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Employee', 'Employee'), ('Manager', 'Manager'), ('S1BEmployee', 'S1BEmployee'), ('S1BManager', 'S1BManager'), ('S1BReview', 'S1BReview'), ('S2Employee', 'S2Employee'), ('S2Manager', 'S2Manager'), ('Approved', 'Approved')], max_length=30)),
                ('appraisal_name', models.CharField(max_length=50, null=True)),
                ('overall_board_comments', models.CharField(blank=True, default='No Comments', max_length=5000, null=True)),
                ('start_date', models.DateField(null=True)),
                ('end_date', models.DateField(null=True)),
                ('completion', models.CharField(choices=[('null', 'null'), ('ECompleted', 'ECompleted'), ('MCompleted', 'MCompleted'), ('BCompleted', 'BCompleted'), ('Review', 'Review'), ('ReviewCompleted', 'ReviewCompleted')], default='null', max_length=50, null=True)),
                ('goals_settingM_rejection', models.CharField(default='NIL', max_length=3000)),
                ('mid_yearM_rejection', models.CharField(default='NIL', max_length=3000)),
                ('appraisalHR_rejection', models.CharField(default='NIL', max_length=3000)),
                ('mid_year_completion', models.CharField(choices=[('Uncompleted', 'Uncompleted'), ('Completed', 'Completed')], default='Uncompleted', max_length=15)),
                ('incrementRecommendation', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('bonusRecommendation', models.CharField(default='NIL', max_length=1000)),
                ('recommendationComments', models.CharField(default='NIL', max_length=1000)),
                ('final_employee_rating', models.IntegerField(blank=True, null=True)),
                ('final_manager_rating', models.IntegerField(blank=True, null=True)),
                ('final_board_rating', models.IntegerField(blank=True, null=True)),
                ('appraisal_category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Appraisals.appraisal_category')),
                ('employee', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Profile.profile')),
                ('manager', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='manager', to='Profile.profile')),
                ('overall_appraisal', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Appraisals.overall_appraisal')),
            ],
        ),
        migrations.CreateModel(
            name='peerAppraisalQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=500, null=True)),
                ('answer', models.CharField(blank=True, max_length=1000, null=True)),
                ('completed', models.CharField(choices=[('Uncompleted', 'Uncompleted'), ('Completed', 'Completed')], default='Uncompleted', max_length=20, null=True)),
                ('appraisal', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Appraisals.peerappraisal')),
            ],
        ),
        migrations.AddField(
            model_name='peerappraisal',
            name='appraisal',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Appraisals.user_appraisal_list'),
        ),
        migrations.AddField(
            model_name='peerappraisal',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='creatorPA', to='Profile.profile'),
        ),
        migrations.AddField(
            model_name='peerappraisal',
            name='manager',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='managersPA', to='Profile.profile'),
        ),
        migrations.AddField(
            model_name='peerappraisal',
            name='viewer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='viewer', to='Profile.profile'),
        ),
        migrations.CreateModel(
            name='Manager_Career_Discussion',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('Q1', models.TextField(null=True)),
                ('Q2', models.TextField(null=True)),
                ('Q3', models.TextField(null=True)),
                ('Q4', models.TextField(null=True)),
                ('Q5', models.TextField(null=True)),
                ('Date', models.DateTimeField(auto_now_add=True)),
                ('appraisal', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Appraisals.user_appraisal_list')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Profile.profile')),
            ],
        ),
        migrations.CreateModel(
            name='Manager_Behaviours_Blueprint',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('f1', models.IntegerField(choices=[(1, '1 - Major Improvement Needed'), (2, '2 - Needs Improvement'), (3, '3 - Meets Expectations'), (4, '4 - Exceeds Expectations'), (5, '5 - Far Exceed Expectations')], default=1)),
                ('f2', models.IntegerField(choices=[(1, '1 - Major Improvement Needed'), (2, '2 - Needs Improvement'), (3, '3 - Meets Expectations'), (4, '4 - Exceeds Expectations'), (5, '5 - Far Exceed Expectations')], default=1)),
                ('f3', models.IntegerField(choices=[(1, '1 - Major Improvement Needed'), (2, '2 - Needs Improvement'), (3, '3 - Meets Expectations'), (4, '4 - Exceeds Expectations'), (5, '5 - Far Exceed Expectations')], default=1)),
                ('f4', models.IntegerField(choices=[(1, '1 - Major Improvement Needed'), (2, '2 - Needs Improvement'), (3, '3 - Meets Expectations'), (4, '4 - Exceeds Expectations'), (5, '5 - Far Exceed Expectations')], default=1)),
                ('f5', models.IntegerField(choices=[(1, '1 - Major Improvement Needed'), (2, '2 - Needs Improvement'), (3, '3 - Meets Expectations'), (4, '4 - Exceeds Expectations'), (5, '5 - Far Exceed Expectations')], default=1)),
                ('f6', models.IntegerField(choices=[(1, '1 - Major Improvement Needed'), (2, '2 - Needs Improvement'), (3, '3 - Meets Expectations'), (4, '4 - Exceeds Expectations'), (5, '5 - Far Exceed Expectations')], default=1)),
                ('f7', models.IntegerField(choices=[(1, '1 - Major Improvement Needed'), (2, '2 - Needs Improvement'), (3, '3 - Meets Expectations'), (4, '4 - Exceeds Expectations'), (5, '5 - Far Exceed Expectations')], default=1)),
                ('f8', models.IntegerField(choices=[(1, '1 - Major Improvement Needed'), (2, '2 - Needs Improvement'), (3, '3 - Meets Expectations'), (4, '4 - Exceeds Expectations'), (5, '5 - Far Exceed Expectations')], default=1)),
                ('f9', models.IntegerField(choices=[(1, '1 - Major Improvement Needed'), (2, '2 - Needs Improvement'), (3, '3 - Meets Expectations'), (4, '4 - Exceeds Expectations'), (5, '5 - Far Exceed Expectations')], default=1)),
                ('f10', models.IntegerField(choices=[(1, '1 - Major Improvement Needed'), (2, '2 - Needs Improvement'), (3, '3 - Meets Expectations'), (4, '4 - Exceeds Expectations'), (5, '5 - Far Exceed Expectations')], default=1)),
                ('f11', models.IntegerField(choices=[(1, '1 - Major Improvement Needed'), (2, '2 - Needs Improvement'), (3, '3 - Meets Expectations'), (4, '4 - Exceeds Expectations'), (5, '5 - Far Exceed Expectations')], default=1)),
                ('f12', models.IntegerField(choices=[(1, '1 - Major Improvement Needed'), (2, '2 - Needs Improvement'), (3, '3 - Meets Expectations'), (4, '4 - Exceeds Expectations'), (5, '5 - Far Exceed Expectations')], default=1)),
                ('f13', models.IntegerField(choices=[(1, '1 - Major Improvement Needed'), (2, '2 - Needs Improvement'), (3, '3 - Meets Expectations'), (4, '4 - Exceeds Expectations'), (5, '5 - Far Exceed Expectations')], default=1)),
                ('f14', models.IntegerField(choices=[(1, '1 - Major Improvement Needed'), (2, '2 - Needs Improvement'), (3, '3 - Meets Expectations'), (4, '4 - Exceeds Expectations'), (5, '5 - Far Exceed Expectations')], default=1)),
                ('f15', models.IntegerField(choices=[(1, '1 - Major Improvement Needed'), (2, '2 - Needs Improvement'), (3, '3 - Meets Expectations'), (4, '4 - Exceeds Expectations'), (5, '5 - Far Exceed Expectations')], default=1)),
                ('f16', models.IntegerField(choices=[(1, '1 - Major Improvement Needed'), (2, '2 - Needs Improvement'), (3, '3 - Meets Expectations'), (4, '4 - Exceeds Expectations'), (5, '5 - Far Exceed Expectations')], default=1)),
                ('appraisal', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Appraisals.user_appraisal_list')),
                ('bb', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Appraisals.behaviours_blueprint')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Profile.profile')),
            ],
        ),
        migrations.CreateModel(
            name='Hr_Recom',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('hr_comment', models.TextField(null=True)),
                ('PIP_length', models.IntegerField(choices=[(1, '1 month'), (2, '2 months'), (3, '3 months'), (4, '4 months'), (5, '5 months'), (6, '6 months')])),
                ('Date', models.DateTimeField()),
                ('appraisal', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Appraisals.user_appraisal_list')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Profile.profile')),
            ],
        ),
        migrations.AddField(
            model_name='behaviours_blueprint',
            name='appraisal',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Appraisals.user_appraisal_list'),
        ),
        migrations.AddField(
            model_name='behaviours_blueprint',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='behaviours_blueprint',
            name='employee',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Profile.profile'),
        ),
        migrations.CreateModel(
            name='Appraisal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Employee', 'Employee'), ('Manager', 'Manager'), ('HR', 'HR')], max_length=50)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='creatorA', to='Profile.profile')),
                ('employee_list', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Appraisals.user_appraisal_list')),
                ('manager', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='managersA', to='Profile.profile')),
                ('rating_scale', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Appraisals.rating_scale')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='userA', to='Profile.profile')),
            ],
        ),
    ]
